<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"
       default-lazy-init="false">

    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">        
                    dataAccessFailure
                </prop>
            </props>
        </property>
    </bean>
    
    <bean id="repository" class="org.meandre.webapp.Repository">
    	<property name="meandreProxyWrapper" ref="meandreProxy"/>
    </bean>
    
    
    <bean id="meandreProxy" class="org.imirsel.nema.service.impl.MeandreProxyWrapper" init-method="init">
   </bean>
    
        <!--  component metadata manager service -->
    <bean id="componentMetadataService" class="org.imirsel.nema.service.impl.ComponentMetadataServiceImpl">
    	<property name="meandreProxyWrapper" ref="meandreProxy"/>
    </bean>
    
    
    
     <!--  flow metadata manager service -->
    <bean id="flowMetadataService" class="org.imirsel.nema.service.impl.FlowMetadataServiceImpl">
    	<property name="meandreProxyWrapper" ref="meandreProxy"/>
    	<property name="repository" ref="repository"/>
    </bean>
    
    
    
    <!--  Job Scheduler for checking the validity of MeandreProxy -->
    <bean id="checkMeandreProxyAvailability" class="org.imirsel.nema.webapp.jobs.CheckMeandreProxyAvailability">
        <property name="meandreProxyWrapper" ref="meandreProxy"/>
    </bean>


    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="checkMeandreProxyAvailability"/>
    <property name="targetMethod" value="checkAvailability"/>
    <property name="concurrent" value="false"/>
    </bean>
    
    <bean id="trigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    	<property name="jobDetail" ref="jobDetail"/>
    	<!-- run every 20 seconds -->
    	<property name="cronExpression" value="0/20 * * * * ?"/>
    </bean>
    
        
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"  lazy-init="false">
    <property name="triggers">
         <ref bean="trigger" />
    </property>    
    </bean>
    <!--  job scheduler end -->
    
    
    
    
    <!--  mock flow service -->
    <bean id="flowService" class="org.imirsel.nema.mock.MockFlowServiceImpl">
    </bean>
    
      <!-- flow controller -->
    <bean id="flowFormController" class="org.imirsel.nema.webapp.controller.FlowFormController">
    	<property name="flowService" ref="flowService"/>
    	<property name="componentMetadataService" ref="componentMetadataService"/>
    	<property name="flowMetadataService" ref="flowMetadataService"/>
    </bean>
    
    <!-- flow controller -->
    <bean id="flowController" class="org.imirsel.nema.webapp.controller.FlowController">
    	<property name="flowService" ref="flowService"/>
    	<property name="componentMetadataService" ref="componentMetadataService"/>
    	<property name="flowMetadataService" ref="flowMetadataService"/>
    </bean>

	<!-- job controller -->
 	<bean id="jobController" class="org.imirsel.nema.webapp.controller.JobController">
   		<property name="flowService" ref="flowService"/>
    	 <property name="userManager" ref="userManager"/>
    </bean>

    <bean id="filenameController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>

    <bean id="fileUploadController" class="org.imirsel.nema.webapp.controller.FileUploadController">
        <property name="validator" ref="beanValidator"/>
        <property name="cancelView" value="redirect:mainMenu.html"/>
        <property name="formView" value="uploadForm"/>
        <property name="successView" value="uploadDisplay"/>
    </bean>

    <bean id="passwordHintController" class="org.imirsel.nema.webapp.controller.PasswordHintController">
        <property name="userManager" ref="userManager"/>
        <property name="messageSource" ref="messageSource"/>
        <property name="mailEngine" ref="mailEngine"/>
        <property name="message" ref="mailMessage"/>
    </bean>

    <bean id="reloadController" class="org.imirsel.nema.webapp.controller.ReloadController"/>

    <bean id="signupController" class="org.imirsel.nema.webapp.controller.SignupController">
        <property name="validator" ref="beanValidator"/>
        <property name="formView" value="signup"/>
        <property name="successView" value="redirect:mainMenu.html"/>
        <property name="userManager" ref="userManager"/>
        <property name="roleManager" ref="roleManager"/>
        <property name="preferenceValueManager" ref="preferenceValueManager"/>
        <property name="mailEngine" ref="mailEngine"/>
        <property name="message" ref="mailMessage"/>
        <property name="templateName" value="accountCreated.vm"/>
    </bean>

    <bean id="userController" class="org.imirsel.nema.webapp.controller.UserController">
        <property name="userManager" ref="userManager"/>
    </bean>

    <bean id="userFormController" class="org.imirsel.nema.webapp.controller.UserFormController">
        <property name="validator" ref="beanValidator"/>
        <property name="formView" value="userForm"/>
        <property name="successView" value="redirect:users.html"/>
        <property name="cancelView" value="redirect:mainMenu.html"/>
        <property name="userManager" ref="userManager"/>
        <property name="roleManager" ref="roleManager"/>
        <property name="mailEngine" ref="mailEngine"/>
        <property name="message" ref="mailMessage"/>
        <property name="templateName" value="accountCreated.vm"/>
    </bean>

    <!-- Add additional controller beans here -->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="2097152"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="ApplicationResources"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

    <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <value>
                /admin/activeUsers.html=filenameController
                /admin/flushCache.html=filenameController
                /admin/reload.html=reloadController
                /admin/users.html=userController
                /mainMenu.html=filenameController
                /experimentMenu.html=filenameController
                /experimentStatusMenu.html=filenameController
                /featureExtraction.html=filenameController
                /classification.html=filenameController
                /evaluation.html=filenameController  
                /passwordHint.html=passwordHintController
                /flowlist.html=flowController
                /flowform.html=flowController
                
                /runjob.html=jobController
                /abortJob.html=jobController
                /jobdetail.html=jobController
                /jobaction.html=jobController
                /getUserJobs.html=jobController
                /saveflow.html=flowFormController
                /flowtemplate.html=flowFormController
                /*.jsp=viewResolver
            </value>
        </property>
        <property name="order" value="0"/>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
        <property name="order" value="1"/>
    </bean>

    <!-- View Resolver for JSPs -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="requestContextAttribute" value="rc"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
</beans>
