<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
        http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	start-state="startPoint">

	<var name="jobForm" class="org.imirsel.nema.webapp.model.JobForm" />
	<var name="flow" class="org.imirsel.nema.model.Flow" />
	<var name="componentList" class="java.util.ArrayList" />
	
	<input name="type" type="java.lang.String" />
	<input name="flowId" type="java.lang.Integer" />
	
	<on-start>
		<evaluate expression="tasksService.buildUploadPath(externalContext,jobForm.uuid)" />
		<evaluate expression="jobForm.setFlowId(flowId)"/>
	</on-start>

	<view-state id="selectTask" model="jobForm">
		<on-entry>
			<evaluate expression="tasksService.getFlowTemplates(type)" result="flowScope.flowList"></evaluate>
		</on-entry>
		<transition on="show" to="getTemplate"/>
	</view-state>

	<view-state id="displayFlowComponents" model="jobForm">
		<transition on="edit" to="editComponentProperties" />
		<transition on="review" to="reviewTask" />
		<transition on="cancel" to="cleanUp" />
	</view-state>

	<view-state id="reviewTask">
		<transition on="run" to="run" />
		<transition on="back" to="displayFlowComponents" />
	</view-state>

	<view-state id="editSimpleComponentProperties">
		<on-entry>
			<evaluate expression="tasksService.formatPropertiesForDisplay(propertyMap)" result="viewScope.formattedProperties" />
		</on-entry>
		<transition on="save" to="displayFlowComponents">
			<evaluate expression="tasksService.updateProperties(requestParameters,propertyMap)" />
		</transition>
		<transition on="cancel" to="displayFlowComponents" />
	</view-state>

	<view-state id="editRemoteServiceComponentProperties">
		<on-entry>
			<evaluate expression="tasksService.formatPropertiesForDisplay(propertyMap)" result="viewScope.formattedProperties" />
		</on-entry>
		<transition on="save" to="displayFlowComponents">
			<evaluate expression="tasksService.updateProperties(requestParameters,propertyMap)" />
		</transition>
		<transition on="next" to="generateExecutable">
			<evaluate expression="tasksService.updateProperties(requestParameters,propertyMap)" />
		</transition>
		<transition on="remove" to="editRemoteServiceComponentProperties">
			<evaluate expression="tasksService.removeExecutable(flowScope.component,jobForm.executableMap,propertyMap)" />
			<evaluate expression="jobForm.templateMap.remove(flowScope.component)" />
		</transition>
		<transition on="cancel" to="displayFlowComponents" />
	</view-state>
	<view-state id="addExecutableSuccess">
		<transition on="next" to="displayFlowComponents" />
		<transition on="back" to="editRemoteServiceComponentProperties" />
		<on-exit>
			<evaluate expression="executableBundle.clear()" />
		</on-exit>
	</view-state>


	<action-state id="getTemplate">
		<evaluate expression="jobForm.executableMap.clear()" />
		<evaluate expression="jobForm.templateMap.clear()" />
		<set name="flowScope.flow" value="flowService.getFlow(jobForm.flowId)" />
		<set name="flowScope.componentMap" value="tasksService.loadFlowComponents(flow)" />
		<set name="flowScope.componentList" value="tasksService.extractComponentList(componentMap)" />
		<set name="flowScope.jobForm.name" value="flow.name">
			<attribute name="name" value="lastStep" />
		</set>
		<transition on="lastStep.success" to="displayFlowComponents" />
	</action-state>

	<subflow-state id="generateExecutable" subflow="task/executable">
		<input name="executableBundleInput" value="tasksService.findBundle(jobForm.executableMap[flowScope.component],propertyMap)"
			type="org.imirsel.nema.webapp.model.UploadedExecutableBundle" />
		<input name="executableTemplateInput" value="jobForm.templateMap[flowScope.component]" type="org.imirsel.nema.model.VanillaPredefinedCommandTemplate" />

		<output name="executableTemplate" type="org.imirsel.nema.model.VanillaPredefinedCommandTemplate" />
		<output name="executableBundle" type="org.imirsel.nema.webapp.model.UploadedExecutableBundle" />
		<transition on="success" to="addExecutableSuccess">
			<evaluate
				expression="tasksService.addExecutable(flowScope.component,propertyMap,executableBundle,jobForm.uuid,jobForm.executableMap,messageContext)" />
			<evaluate expression="jobForm.templateMap.put(flowScope.component,executableTemplate)" />

		</transition>
		<transition on="done" to="editRemoteServiceComponentProperties" />
	</subflow-state>

	<action-state id="editComponentProperties">
		<evaluate expression="tasksService.getRoles()" result="flowScope.userRoles" />
		<evaluate expression="componentList.get(requestParameters.idx)" result="flowScope.component" />
		<set name="flowScope.propertyMap" value="componentMap[flowScope.component]" />
		<evaluate expression='tasksService.areFromRemoteComponent(propertyMap)'>
			<attribute name="name" value="isRemoteService" />
		</evaluate>
		<transition on="isRemoteService.yes" to="editRemoteServiceComponentProperties" />
		<transition on="isRemoteService.no" to="editSimpleComponentProperties" />
	</action-state>

	<action-state id="run">
		<evaluate expression="tasksService.run(flow,componentMap,jobForm.name,jobForm.description)"
			result="flowScope.job" />
		<transition on="success" to="checkRunResult" />

	</action-state>

	<view-state id="runError">
		<transition on="retry" to="run" />
		<transition on="cancel" to="selectTask" />
	</view-state>

	<action-state id="cleanUp">
		<evaluate expression="tasksService.clearBundles(jobForm.executableMap)" />
		<evaluate expression="jobForm.executableMap.clear()" />
		<evaluate expression="jobForm.templateMap.clear()" />
		<transition to="selectTask" />
	</action-state>

	<decision-state id="checkRunResult">
		<if test="(job.id!=null)" else="run" then="jobdetail" />
	</decision-state>

	<decision-state id="startPoint">
		<if test="jobForm.flowId==null" then="selectTask" else="getTemplate" />
	</decision-state>

	<end-state id="jobdetail" view="externalRedirect:contextRelative:/get/JobManager.jobDetail?id=#{flowScope.job.id}" />
	
	<global-transitions>
		<transition on-exception="org.imirsel.nema.flowservice.MeandreServerException" to="runError" />
		<transition on-exception="org.imirsel.nema.flowservice.ServiceException" to="runError" />
		<transition on-exception="org.imirsel.nema.contentrepository.client.ContentRepositoryServiceException" to="runError" />	
	</global-transitions>
	
	<on-end>
		<evaluate expression="tasksService.clearBundles(jobForm.executableMap)" />
	</on-end>
</flow>