#summary Documents the standards and conventions for code comments.

= Introduction =

Good comments are essential to easily readable and maintainable code. Good comments actually extend the life of code because well-commented code is more likely to be reused rather than rewritten. For open source projects, well-documented code communicates to casual observers and potential contributors that the project is committed to producing mature, quality code.

It is critical that documentation be written at the time of development when details are still fresh in your mind, rather than six months later as an afterthought. Likewise, when code is modified and/or extended, the comments and other documentation about the code should be immediately updated to reflect the changes.

Code comments fall into two categories:

    * Javadoc comments, which become part of the auto-generated documentation.
          ** Provides an overview of the whole project (overview.html)
          ** Explains the purpose of packages (package-info.java)
          ** Explains the interface contract of classes (in each class file)
    * Code comments, which are available only by looking at the source code.
          ** Explains how the code works
